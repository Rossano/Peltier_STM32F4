/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MAINSCREEN_VIEW_BASE_HPP
#define MAINSCREEN_VIEW_BASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/mainscreen_screen/MainScreenPresenter.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/containers/progress_indicators/CircleProgress.hpp>
#include <touchgfx/widgets/canvas/PainterRGB888Bitmap.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/mixins/ClickListener.hpp>

class MainScreenViewBase : public touchgfx::View<MainScreenPresenter>
{
public:
    MainScreenViewBase();
    virtual ~MainScreenViewBase() {}

    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::ScalableImage background;
    touchgfx::CircleProgress PWMProgress;
    touchgfx::PainterRGB888Bitmap PWMProgressPainter;
    touchgfx::TextArea PeltierTempText;
    touchgfx::TextArea ExtTempText;
    touchgfx::TextAreaWithOneWildcard PeltierTemp;
    touchgfx::TextAreaWithOneWildcard ExtTemp;
    touchgfx::TextAreaWithOneWildcard PWMText;
    touchgfx::ClickListener< touchgfx::Image > PWMDownButton;
    touchgfx::ClickListener< touchgfx::Image > StartButton;
    touchgfx::ClickListener< touchgfx::Image > StopButton;
    touchgfx::ClickListener< touchgfx::Image > PWMUpButton;

    /*
     * Wildcard Buffers
     */
    static const uint16_t PELTIERTEMP_SIZE = 3;
    touchgfx::Unicode::UnicodeChar PeltierTempBuffer[PELTIERTEMP_SIZE];
    static const uint16_t EXTTEMP_SIZE = 3;
    touchgfx::Unicode::UnicodeChar ExtTempBuffer[EXTTEMP_SIZE];
    static const uint16_t PWMTEXT_SIZE = 5;
    touchgfx::Unicode::UnicodeChar PWMTextBuffer[PWMTEXT_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint16_t CANVAS_BUFFER_SIZE = 3600;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

};

#endif // MAINSCREEN_VIEW_BASE_HPP
