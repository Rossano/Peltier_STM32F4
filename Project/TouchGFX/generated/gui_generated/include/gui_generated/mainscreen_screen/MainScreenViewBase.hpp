/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MAINSCREEN_VIEW_BASE_HPP
#define MAINSCREEN_VIEW_BASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/mainscreen_screen/MainScreenPresenter.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/containers/progress_indicators/CircleProgress.hpp>
#include <touchgfx/widgets/canvas/PainterRGB888.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>

class MainScreenViewBase : public touchgfx::View<MainScreenPresenter>
{
public:
    MainScreenViewBase();
    virtual ~MainScreenViewBase() {}

    virtual void setupScreen();

    /*
     * Custom Action Handlers
     */
    virtual void PWMUPClicked()
    {
        // Override and implement this function in MainScreenView
    }

    virtual void PWMDownClicked()
    {
        // Override and implement this function in MainScreenView
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::ScalableImage background;
    touchgfx::CircleProgress PWMProgress;
    touchgfx::PainterRGB888 PWMProgressPainter;
    touchgfx::TextArea PeltierTempText;
    touchgfx::TextArea ExtTempText;
    touchgfx::TextAreaWithOneWildcard PeltierTemp;
    touchgfx::TextAreaWithOneWildcard ExtTemp;
    touchgfx::TextAreaWithOneWildcard PWMText;
    touchgfx::IconButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > > PWMUpButton;
    touchgfx::IconButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > > PWMDownButton;
    touchgfx::ButtonWithIcon SettingButton;

    /*
     * Wildcard Buffers
     */
    static const uint16_t PELTIERTEMP_SIZE = 3;
    touchgfx::Unicode::UnicodeChar PeltierTempBuffer[PELTIERTEMP_SIZE];
    static const uint16_t EXTTEMP_SIZE = 3;
    touchgfx::Unicode::UnicodeChar ExtTempBuffer[EXTTEMP_SIZE];

private:

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

    /*
     * Callback Declarations
     */
    touchgfx::Callback<MainScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<MainScreenViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Canvas Buffer Size
     */
    static const uint16_t CANVAS_BUFFER_SIZE = 3600;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

};

#endif // MAINSCREEN_VIEW_BASE_HPP
